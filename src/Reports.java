/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;

/**
 * @author satyanarayana.y
 */
public class Reports extends javax.swing.JPanel {

    /**
     * Creates new form Reports
     */
    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel incomeLabel;
    private javax.swing.JPanel incomePanel;
    private javax.swing.JLabel incomeValue;
    private javax.swing.JLabel visitLabel;
    private javax.swing.JPanel visitPanel;
    private javax.swing.JLabel visitValue;
    public Reports() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public int getIncome() {
        Database db = new Database();
        Date date = new Date();
        try {
            Date startDate = dateFormat.parse(date.getYear() + "-" + date.getMonth() + "-1");
            ResultSet rs = db.executeQuery("select sum(s.Cost) as monthIncome from Service s, Appointment a where a.ServiceID=s.ID and a.AppointmentDate>=? and a.IsActive=true and a.AppointmentDate<?", dateFormat.format(startDate), dateFormat.format(date));
            while (rs.next()) {
                return rs.getInt("monthIncome");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return 0;
    }

    public int getVisits() {
        Database db = new Database();
        Date date = new Date();
        try {
            Date startDate = dateFormat.parse(date.getYear() + "-" + date.getMonth() + "-1");
            ResultSet rs = db.executeQuery("select count(*) as visits from Appointment where AppointmentDate>=? and IsActive=true and AppointmentDate<?", dateFormat.format(startDate), dateFormat.format(date));
            while (rs.next()) {
                return rs.getInt("visits");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return 0;
    }

    private void initComponents() {

        incomePanel = new javax.swing.JPanel();
        incomeValue = new javax.swing.JLabel();
        visitPanel = new javax.swing.JPanel();
        visitValue = new javax.swing.JLabel();
        incomeLabel = new javax.swing.JLabel();
        visitLabel = new javax.swing.JLabel();

        setBackground(new java.awt.Color(216, 235, 243));

        incomeValue.setFont(new java.awt.Font("Play", 1, 24)); // NOI18N
        incomeValue.setText("â‚¹ " + getIncome());

        javax.swing.GroupLayout incomePanelLayout = new javax.swing.GroupLayout(incomePanel);
        incomePanel.setLayout(incomePanelLayout);
        incomePanelLayout.setHorizontalGroup(
                incomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(incomePanelLayout.createSequentialGroup()
                                .addContainerGap(134, Short.MAX_VALUE)
                                .addComponent(incomeValue)
                                .addGap(128, 128, 128))
        );
        incomePanelLayout.setVerticalGroup(
                incomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(incomePanelLayout.createSequentialGroup()
                                .addGap(81, 81, 81)
                                .addComponent(incomeValue)
                                .addContainerGap(90, Short.MAX_VALUE))
        );

        visitValue.setFont(new java.awt.Font("Play", 1, 24)); // NOI18N
        visitValue.setText(Integer.toString(getVisits()));

        javax.swing.GroupLayout visitPanelLayout = new javax.swing.GroupLayout(visitPanel);
        visitPanel.setLayout(visitPanelLayout);
        visitPanelLayout.setHorizontalGroup(
                visitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(visitPanelLayout.createSequentialGroup()
                                .addContainerGap(158, Short.MAX_VALUE)
                                .addComponent(visitValue)
                                .addGap(140, 140, 140))
        );
        visitPanelLayout.setVerticalGroup(
                visitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(visitPanelLayout.createSequentialGroup()
                                .addGap(81, 81, 81)
                                .addComponent(visitValue)
                                .addContainerGap(90, Short.MAX_VALUE))
        );

        incomeLabel.setFont(new java.awt.Font("Play", 1, 18)); // NOI18N
        incomeLabel.setText("Current Month Income");

        visitLabel.setFont(new java.awt.Font("Play", 1, 18)); // NOI18N
        visitLabel.setText("Current Month Visits");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(130, 130, 130)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(incomePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(40, 40, 40)
                                                .addComponent(incomeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 299, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(60, 60, 60)
                                                .addComponent(visitLabel)
                                        )
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(visitPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(130, 130, 130)
                                        )))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap(168, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(incomeLabel)
                                        .addComponent(visitLabel))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(incomePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(visitPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(183, Short.MAX_VALUE))
        );
    }
}
